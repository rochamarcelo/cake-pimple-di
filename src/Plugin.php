<?php

namespace RochaMarcelo\CakePimpleDi;

use Cake\Core\BasePlugin;
use Cake\Core\Configure;
use Cake\Core\PluginApplicationInterface;
use RochaMarcelo\CakePimpleDi\Di\Di;

/**
 * Class Plugin
 * @package RochaMarcelo\CakePimpleDi
 */
class Plugin extends BasePlugin
{
    public function getTemplatePath(): string
    {
        return '';
    }

    /**
     * @param PluginApplicationInterface $app
     */
    public function bootstrap(PluginApplicationInterface $app): void
    {
        parent::bootstrap($app); // TODO: Change the autogenerated stub

        $config = Configure::consume('CakePimpleDi');
        $scopes = [];
        if ( !isset($config['scopes']) ) {
            $scopes = [
                'default' => (array)$config
            ];
        }

        foreach ( $scopes as $name => $config ) {
            $Di = Di::instance($name);

            $config = $config + [
                    'providers' => []
                ];

            foreach ($config['providers'] as $provider ) {
                if ( is_string($provider) ) {
                    $provider = new $provider;
                }

                $Di->register($provider);
            }

            if ( isset($config['services']) && is_array($config['services']) ) {
                $Di->setMany($config['services']);
            }
        }
        if (!empty($config['actionInjections'])) {
            \Cake\Event\EventManager::instance()->on(new \RochaMarcelo\CakePimpleDi\Event\ActionInjectionListener($config['actionInjections']));
        }
    }
}
